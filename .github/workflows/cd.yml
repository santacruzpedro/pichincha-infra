name: CD Terraform
on:
  push:
    branches:
      - main
      - qa
      - develop

jobs:
  plan:
    name: Terraform Apply
    runs-on: ubuntu-latest
    env:
      TF_ACTION_WORKING_DIR: 'terraform/'
      TF_ACTION_BACKEND_BUCKET: 'terraform-state-pichincha'
      TF_ACTION_BACKEND_KEY: 'pichincha.tfstate'
      TF_VAR_stage_deployed_at: ${{ github.sha }}      
    defaults:
      run:
        working-directory: ${{ env.TF_ACTION_WORKING_DIR }}
    steps:
    
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2
      
      - name: Set env BRANCH
        id: branch
        run: |
          echo "BRANCH=$(echo $GITHUB_REF | cut -d'/' -f 3)" >> $GITHUB_ENV

      - name: Set env AWS
        id: environment
        run: |
          if [[ $BRANCH == 'main' && $GITHUB_EVENT_NAME == 'push' ]]; then
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_PROD }}" >> $GITHUB_ENV
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}" >> $GITHUB_ENV
            echo "AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION_PROD }}" >> $GITHUB_ENV
            echo "BRANCH=prod" >> $GITHUB_ENV
          elif [[ $BRANCH == 'qa' && $GITHUB_EVENT_NAME == 'push' ]]; then
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_QA }}" >> $GITHUB_ENV
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_QA }}" >> $GITHUB_ENV
            echo "AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION_QA }}" >> $GITHUB_ENV
          elif [[ $BRANCH == 'develop' && $GITHUB_EVENT_NAME == 'push' ]]; then
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_DEVELOP }}" >> $GITHUB_ENV
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_DEVELOP }}" >> $GITHUB_ENV
            echo "AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION_DEVELOP }}" >> $GITHUB_ENV
          fi

      - name: Setup
        id: setup
        uses: hashicorp/setup-terraform@v1

      - name: Terraform fmt
        id: fmt
        run: terraform fmt

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=${{ env.TF_ACTION_BACKEND_BUCKET}}-${{ env.BRANCH }}" -backend-config="key=${{ env.TF_ACTION_BACKEND_KEY }}" -backend-config="region=${{ env.AWS_DEFAULT_REGION }}" -backend=true

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -var-file=../variables/${{ env.BRANCH }}.tfvars -out=terraform.out

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve terraform.out

      #- name: Terraform Destroy
      #  id: destroy
      #  run: terraform destroy -var-file=../variables/${{ env.BRANCH }}.tfvars -auto-approve
